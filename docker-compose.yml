services:
  # Backend PHP service
  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile.dev
    container_name: php-dev-container
    args:
        PHP_VERSION: ${BUILD_PHP_VERSION}
    environment:
      APP_ENV: ${APP_ENV}
      APP_DEBUG: ${APP_DEBUG}
      PHP_PORT: ${PHP_PORT}
      MYSQL_HOST: mysql
      MONGO_HOST: mongo
    volumes:
      - ./backend/src:/var/www/html/src
      - ./backend/public:/var/www/html/public
      - ./backend/.env:/var/www/html/.env # Uniquement pour le développement
      - ./backend/vendor:/var/www/html/vendor
    networks:
      - backend

  # MySQL database service
  mysql:
    build:
      context: ./docker/mysql
      dockerfile: Dockerfile
    container_name: mysql-dev-container
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend

  # MongoDB database service
  mongo:
    build:
      context: ./docker/mongo
      dockerfile: Dockerfile
    container_name: mongo-dev-container
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - mongo_data:/data/db
      - ./docker/mongo/init.js:/docker-entrypoint-initdb.d/init.js
    ports:
      - "${MONGO_PORT}:27017"
    networks:
      - backend

  # Frontend Node.js service with Vite
  node:
    build:
      context: ./docker/node
      dockerfile: Dockerfile.dev
    container_name: node-dev-container
    volumes:
      - ./frontend/public:/app/public
      - ./frontend/src:/app/src
      - ./frontend/package.json:/app/package.json
      - ./frontend/package-lock.json:/app/package-lock.json
      - node_modules:/app/node_modules # Volume nommé pour node_modules
    ports:
      - "${VITE_HOST_PORT}:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG}
    networks:
      - frontend
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]

  # Nginx service
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: nginx-dev-container
    environment:
      - APP_ENV=developpement
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./backend/public:/var/www/html/public
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - php
      - node
    networks:
      - backend
      - frontend

  # phpMyAdmin service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin-container
    environment:
      PMA_HOST: mysql
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - backend

volumes:
  mysql_data:
    name: arcadia_db_data
  mongo_data:
    name: arcadia_mongo_data
  node_modules:
    name: arcadia_node_modules

networks:
  backend:
    name: arcadia_backend_network
  frontend:
    name: arcadia_frontend_network
